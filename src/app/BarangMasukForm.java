/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Color;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author yusrb
 */
public class BarangMasukForm extends javax.swing.JFrame {

    /**
     * Creates new form UsersForm
     */
    
    private final String usernameForPage;
    
    private String mode;
    
    private int stockInId;
    
    private java.util.Map<String, Integer> produkMap = new java.util.HashMap<>();
    private java.util.Map<String, Integer> supplierMap = new java.util.HashMap<>();
    private java.util.Map<String, Integer> statusMap = new java.util.HashMap<>();
    
    public BarangMasukForm(String username) {
        initComponents();
        Connection();
        loadSuppliers();
        loadProducts();
        loadStatus();
        
        this.usernameForPage = username;
        
        this.mode = "create";
        btnAction.setText("Create");
        btnAction.setBackground(Color.GREEN);
        
        setLocationRelativeTo(null);
    }
    
    public BarangMasukForm(String username, int barangMasukId, String namaProduk, int jumlah, String deskripsi, String supplier, Timestamp tanggalMasuk) {
        this(username);

        this.mode = "update";
        this.stockInId = barangMasukId;

        btnAction.setText("Update");    
        btnAction.setBackground(Color.BLUE);

        cmbProduk.setSelectedItem(namaProduk);
        txtJumlah.setText(String.valueOf(jumlah));
        dtanggal_masuk.setDate(tanggalMasuk);
        cmbSupplier.setSelectedItem(supplier);
        txtDeskripsi.setText(deskripsi);
    }

    Connection conn;
    PreparedStatement pst;
    ResultSet rslt;

    public void Connection()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/inventaris_java", "root", "");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BarangMasukForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BarangMasukForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void loadStatus()
    {
        cmbStatus.removeAllItems();
        
        cmbStatus.addItem("masuk");
        cmbStatus.addItem("dibatalkan");
    }
    
    public void loadSuppliers()
    {
        try {
            pst = conn.prepareStatement("SELECT id, nama_supplier FROM suppliers");
            rslt = pst.executeQuery();
            cmbSupplier.removeAllItems();
            supplierMap.clear();
            while (rslt.next()) {
                int id = rslt.getInt("id");
                String nama = rslt.getString("nama_supplier");
                cmbSupplier.addItem(nama);
                supplierMap.put(nama, id); 
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    public void loadProducts()
    {
        try {
            pst =  conn.prepareStatement("SELECT id, nama FROM products");
            rslt = pst.executeQuery();
            
            cmbProduk.removeAllItems();
            
            produkMap.clear();
            
            while (rslt.next())
            {
                int id = rslt.getInt("id");
                String nama = rslt.getString("nama");
                cmbProduk.addItem(nama);
                produkMap.put(nama, id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(BarangMasukForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAction = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBackToProducts = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtJumlah = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDeskripsi = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbProduk = new javax.swing.JComboBox<>();
        cmbSupplier = new javax.swing.JComboBox<>();
        dtanggal_masuk = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Barang Masuk Form Page");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Nama Produk");

        jPanel1.setBackground(new java.awt.Color(123, 104, 238));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 42)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Stock In Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(294, 294, 294))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Deskripsi");

        btnAction.setForeground(new java.awt.Color(255, 255, 255));
        btnAction.setText("Action");
        btnAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(102, 102, 102));
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnBackToProducts.setBackground(new java.awt.Color(123, 104, 238));
        btnBackToProducts.setForeground(new java.awt.Color(255, 255, 255));
        btnBackToProducts.setText("Back");
        btnBackToProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToProductsActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Jumlah");

        txtDeskripsi.setColumns(20);
        txtDeskripsi.setRows(5);
        jScrollPane1.setViewportView(txtDeskripsi);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Tanggal Masuk");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Supplier");

        cmbProduk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbSupplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Status");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(dtanggal_masuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)
                                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(106, 106, 106)))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(btnBackToProducts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAction, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBackToProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dtanggal_masuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackToProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToProductsActionPerformed
        // TODO add your handling code here:
        
        BarangMasuk barang_masuk_form = new BarangMasuk(usernameForPage);
        barang_masuk_form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackToProductsActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        
        cmbProduk.setSelectedIndex(0);
        txtJumlah.setText("");
        dtanggal_masuk.setDate(null);
        cmbSupplier.setSelectedIndex(0);
        txtDeskripsi.setText("");
        
        cmbProduk.requestFocusInWindow();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionActionPerformed
        // TODO add your handling code here:

        try {
            String produkDipilih = (String) cmbProduk.getSelectedItem();
            int idProduk = produkMap.getOrDefault(produkDipilih, -1);

            String supplierDipilih = (String) cmbSupplier.getSelectedItem();
            int idSupplier = supplierMap.getOrDefault(supplierDipilih, -1);

            String deskripsi = txtDeskripsi.getText();
            String jumlahBarangTxt = txtJumlah.getText();
            String status = (String) cmbStatus.getSelectedItem();
            java.util.Date tgl = dtanggal_masuk.getDate();

            System.out.println("Status yang dipilih: " + status);
            
            if (produkDipilih == null || produkDipilih.isEmpty() ||
                supplierDipilih == null || supplierDipilih.isEmpty() ||
                jumlahBarangTxt.isEmpty() || deskripsi.isEmpty() ||
                (status.equalsIgnoreCase("masuk") && tgl == null) ||
                status == null || idProduk == -1 || idSupplier == -1) {

                JOptionPane.showMessageDialog(this, "Seluruh input harus diisi dengan benar!", "Input Kosong", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int jumlahBarang;
            try {
                jumlahBarang = Integer.parseInt(jumlahBarangTxt);
                if (jumlahBarang <= 0) {
                    JOptionPane.showMessageDialog(this, "Jumlah barang harus angka positif!", "Input Salah", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Jumlah barang harus berupa angka!", "Input Salah", JOptionPane.WARNING_MESSAGE);
                return;
            }

            java.sql.Timestamp tanggalMasuk = new java.sql.Timestamp(tgl.getTime());

            if (mode.equals("create")) {
                pst = conn.prepareStatement(
                    "INSERT INTO stock_in(produk_id, jumlah, tanggal_masuk, supplier_id, deskripsi, status) VALUES (?, ?, ?, ?, ?, ?)",
                    Statement.RETURN_GENERATED_KEYS
                );
                pst.setInt(1, idProduk);
                pst.setInt(2, jumlahBarang);
                pst.setTimestamp(3, tanggalMasuk);
                pst.setInt(4, idSupplier);
                pst.setString(5, deskripsi);
                pst.setString(6, status);

                int hasil = pst.executeUpdate();

                if (hasil == 1) {
                    if (status.equalsIgnoreCase("masuk")) {
                        PreparedStatement updateStok = conn.prepareStatement("UPDATE products SET stok = stok + ? WHERE id = ?");
                        updateStok.setInt(1, jumlahBarang);
                        updateStok.setInt(2, idProduk);
                        updateStok.executeUpdate();
                    }

                    JOptionPane.showMessageDialog(this, "Barang Masuk Baru Berhasil Ditambahkan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    BarangMasuk halaman = new BarangMasuk(usernameForPage);
                    halaman.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Barang Masuk Gagal Ditambahkan!", "Gagal", JOptionPane.WARNING_MESSAGE);
                }

            } else if (mode.equals("update")) {
                PreparedStatement ambilData = conn.prepareStatement("SELECT jumlah, produk_id, status FROM stock_in WHERE id = ?");
                ambilData.setInt(1, stockInId);
                ResultSet dataLama = ambilData.executeQuery();

                if (!dataLama.next()) {
                    JOptionPane.showMessageDialog(this, "Data Barang Masuk Tidak Ditemukan!", "Gagal", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                int jumlahLama = dataLama.getInt("jumlah");
                int idProdukLama = dataLama.getInt("produk_id");
                String statusLama = dataLama.getString("status");

                pst = conn.prepareStatement("UPDATE stock_in SET produk_id = ?, jumlah = ?, tanggal_masuk = ?, supplier_id = ?, deskripsi = ?, status = ? WHERE id = ?");
                pst.setInt(1, idProduk);
                pst.setInt(2, jumlahBarang);
                pst.setTimestamp(3, tanggalMasuk);
                pst.setInt(4, idSupplier);
                pst.setString(5, deskripsi);
                pst.setString(6, status);
                pst.setInt(7, stockInId);

                int hasil = pst.executeUpdate();

                if (hasil == 1) {
                    if (!status.equalsIgnoreCase(statusLama)) {
                        if (statusLama.equalsIgnoreCase("masuk") && status.equalsIgnoreCase("dibatalkan")) {
                            PreparedStatement kembalikan = conn.prepareStatement("UPDATE products SET stok = stok - ? WHERE id = ?");
                            kembalikan.setInt(1, jumlahLama);
                            kembalikan.setInt(2, idProdukLama);
                            kembalikan.executeUpdate();
                        } else if (statusLama.equalsIgnoreCase("dibatalkan") && status.equalsIgnoreCase("masuk")) {
                            PreparedStatement tambah = conn.prepareStatement("UPDATE products SET stok = stok + ? WHERE id = ?");
                            tambah.setInt(1, jumlahBarang);
                            tambah.setInt(2, idProduk);
                            tambah.executeUpdate();
                        }
                    } else if (status.equalsIgnoreCase("masuk")) {
                        if (idProduk != idProdukLama) {
                            PreparedStatement kurangiStok = conn.prepareStatement("UPDATE products SET stok = stok - ? WHERE id = ?");
                            kurangiStok.setInt(1, jumlahLama);
                            kurangiStok.setInt(2, idProdukLama);
                            kurangiStok.executeUpdate();

                            PreparedStatement tambahStok = conn.prepareStatement("UPDATE products SET stok = stok + ? WHERE id = ?");
                            tambahStok.setInt(1, jumlahBarang);
                            tambahStok.setInt(2, idProduk);
                            tambahStok.executeUpdate();
                        } else {
                            int selisih = jumlahBarang - jumlahLama;
                            PreparedStatement koreksiStok = conn.prepareStatement("UPDATE products SET stok = stok + ? WHERE id = ?");
                            koreksiStok.setInt(1, selisih);
                            koreksiStok.setInt(2, idProduk);
                            koreksiStok.executeUpdate();
                        }
                    }

                    JOptionPane.showMessageDialog(this, "Barang Masuk Berhasil Diupdate!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    BarangMasuk halaman = new BarangMasuk(usernameForPage);
                    halaman.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Barang Masuk Gagal Diupdate!", "Gagal", JOptionPane.WARNING_MESSAGE);
                }
            }

        } catch (Exception e) {
            Logger.getLogger(BarangMasukForm.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarangMasukForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarangMasukForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarangMasukForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarangMasukForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BarangMasukForm("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAction;
    private javax.swing.JButton btnBackToProducts;
    private javax.swing.JButton btnClear;
    private javax.swing.JComboBox<String> cmbProduk;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JComboBox<String> cmbSupplier;
    private com.toedter.calendar.JDateChooser dtanggal_masuk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtDeskripsi;
    private javax.swing.JTextField txtJumlah;
    // End of variables declaration//GEN-END:variables
}

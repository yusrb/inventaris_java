/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Color;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author yusrb
 */
public class BarangKeluarForm extends javax.swing.JFrame {

    /**
     * Creates new form UsersForm
     */
    
    private final String usernameForPage;
    
    private String mode;
    
    private int barangMasukId;
    
    private int stockInId;
    
    private java.util.Map<String, Integer> produkMap = new java.util.HashMap<>();
    
    public BarangKeluarForm(String username) {
        initComponents();
        Connection();
        loadProducts();
        loadStatus();
        
        this.usernameForPage = username;
        
        this.mode = "create";
        btnAction.setText("Create");
        btnAction.setBackground(Color.GREEN);
        
        setLocationRelativeTo(null);
    }
    
    public BarangKeluarForm(String username, int id, String produkLama, int jumlahLama, Timestamp tanggalKeluarTimestamp, String penerimaLama, String statusLama, String deskripsiLama) {
        this(username);

        this.stockInId = id;
        this.mode = "update";

        btnAction.setText("Update");
        btnAction.setBackground(Color.BLUE);

        cmbProduk.setSelectedItem(produkLama);
        txtJumlah.setText(String.valueOf(jumlahLama));
        if (tanggalKeluarTimestamp != null) {
            dtanggal_keluar.setDate(new Date(tanggalKeluarTimestamp.getTime()));
        } else {
            dtanggal_keluar.setDate(null);
        }
        txtPenerima.setText(penerimaLama);
        cmbStatus.setSelectedItem(statusLama);
        txtDeskripsi.setText(deskripsiLama);
    }
    
    Connection conn;
    PreparedStatement pst;
    ResultSet rslt;
    
    public void Connection()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/inventaris_java", "root", "");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BarangKeluarForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BarangKeluarForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void loadProducts()
    {
        try {
            pst =  conn.prepareStatement("SELECT id, nama FROM products");
            rslt = pst.executeQuery();
            
            cmbProduk.removeAllItems();
            
            produkMap.clear();
            
            while (rslt.next())
            {
                int id = rslt.getInt("id");
                String nama = rslt.getString("nama");
                cmbProduk.addItem(nama);
                produkMap.put(nama, id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(BarangMasukForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadStatus() {
        cmbStatus.removeAllItems();
        
        cmbStatus.addItem("keluar");
        cmbStatus.addItem("dipinjam");
        cmbStatus.addItem("selesai dipinjam");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAction = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBackToProducts = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtPenerima = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDeskripsi = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbProduk = new javax.swing.JComboBox<>();
        dtanggal_keluar = new com.toedter.calendar.JDateChooser();
        cmbStatus = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtJumlah = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Barang Keluar Form Page");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Nama Produk");

        jPanel1.setBackground(new java.awt.Color(123, 104, 238));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 42)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Stock In Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(294, 294, 294))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Deskripsi");

        btnAction.setForeground(new java.awt.Color(255, 255, 255));
        btnAction.setText("Action");
        btnAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(102, 102, 102));
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnBackToProducts.setBackground(new java.awt.Color(123, 104, 238));
        btnBackToProducts.setForeground(new java.awt.Color(255, 255, 255));
        btnBackToProducts.setText("Back");
        btnBackToProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToProductsActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Penerima");

        txtDeskripsi.setColumns(20);
        txtDeskripsi.setRows(5);
        jScrollPane1.setViewportView(txtDeskripsi);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Tanggal Keluar");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Status");

        cmbProduk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Jumlah");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbProduk, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(48, 48, 48)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(txtPenerima, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                                .addComponent(dtanggal_keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(48, 48, 48)
                                                .addComponent(jLabel6)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(106, 106, 106)))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(btnBackToProducts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAction, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBackToProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtPenerima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtanggal_keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(127, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackToProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToProductsActionPerformed
        // TODO add your handling code here:
        
        BarangKeluar barang_keluar_form = new BarangKeluar(usernameForPage);
        barang_keluar_form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackToProductsActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        
        cmbProduk.setSelectedIndex(0);
        txtPenerima.setText("");
        dtanggal_keluar.setDate(null);
        cmbStatus.setSelectedIndex(0);
        txtDeskripsi.setText("");
        
        cmbProduk.requestFocusInWindow();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionActionPerformed
        // TODO add your handling code here:
        
        try {
                String produkDipilih = (String) cmbProduk.getSelectedItem();
                int idProduk = produkMap.getOrDefault(produkDipilih, -1);

                String status = (String) cmbStatus.getSelectedItem();

                String penerima = txtPenerima.getText();
                int jumlah = Integer.parseInt(txtJumlah.getText());
                java.util.Date tgl = dtanggal_keluar.getDate();
                java.sql.Timestamp tanggalKeluar = new java.sql.Timestamp(tgl.getTime());

                String deskripsi = txtDeskripsi.getText();

                if (idProduk == -1 || deskripsi.isEmpty() || tgl == null || status.isEmpty() || penerima.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Seluruh Input Harus Diisi!", "Input Kosong", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                if (mode.equals("create")) {
                    pst = conn.prepareStatement(
                        "INSERT INTO stock_out(produk_id, penerima, jumlah, status, tanggal_keluar, deskripsi) VALUES (?, ?, ?, ?, ?, ?)",
                        Statement.RETURN_GENERATED_KEYS
                    );
                    pst.setInt(1, idProduk);
                    pst.setString(2, penerima);
                    pst.setInt(3, jumlah);
                    pst.setString(4, status);
                    pst.setTimestamp(5, tanggalKeluar);
                    pst.setString(6, deskripsi);

                    int hasil = pst.executeUpdate();

                    if (hasil == 1) {
                        if (status.equalsIgnoreCase("dipinjam") || status.equalsIgnoreCase("keluar")) {
                            PreparedStatement updateStok = conn.prepareStatement("UPDATE products SET stok = stok - ? WHERE id = ?");
                            updateStok.setInt(1, jumlah);
                            updateStok.setInt(2, idProduk);
                            updateStok.executeUpdate();
                        }

                        JOptionPane.showMessageDialog(this, "Barang Keluar Berhasil Ditambahkan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                        BarangKeluar halaman = new BarangKeluar(usernameForPage);
                        halaman.setVisible(true);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Barang Keluar Gagal Ditambahkan!", "Gagal", JOptionPane.WARNING_MESSAGE);
                    }

                } else if (mode.equals("update")) {
                    PreparedStatement ambilData = conn.prepareStatement("SELECT jumlah, produk_id, status FROM stock_out WHERE id = ?");
                    ambilData.setInt(1, stockInId);
                    ResultSet dataLama = ambilData.executeQuery();

                    if (!dataLama.next()) {
                        JOptionPane.showMessageDialog(this, "Data Barang Keluar Tidak Ditemukan!", "Gagal", JOptionPane.WARNING_MESSAGE);
                        return;
                    }

                    int jumlahLama = dataLama.getInt("jumlah");
                    int idProdukLama = dataLama.getInt("produk_id");
                    String statusLama = dataLama.getString("status");

                    if (statusLama.equals("dipinjam") && status.equals("selesai dipinjam")) {
                        pst = conn.prepareStatement(
                            "UPDATE stock_out SET produk_id = ?, penerima = ?, jumlah = ?, status = ?, tanggal_keluar = ?, deskripsi = ?, tanggal_dikembalikan = ? WHERE id = ?"
                        );
                        pst.setInt(1, idProduk);
                        pst.setString(2, penerima);
                        pst.setInt(3, jumlah);
                        pst.setString(4, status);
                        pst.setTimestamp(5, tanggalKeluar);
                        pst.setString(6, deskripsi);
                        pst.setTimestamp(7, new java.sql.Timestamp(System.currentTimeMillis()));
                        pst.setInt(8, stockInId);

                        int hasil = pst.executeUpdate();

                        if (hasil == 1) {
                            PreparedStatement kembalikan = conn.prepareStatement("UPDATE products SET stok = stok + ? WHERE id = ?");
                            kembalikan.setInt(1, jumlahLama);
                            kembalikan.setInt(2, idProdukLama);
                            kembalikan.executeUpdate();

                            JOptionPane.showMessageDialog(this, "Barang Keluar Berhasil Diupdate!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                            BarangKeluar halaman = new BarangKeluar(usernameForPage);
                            halaman.setVisible(true);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Barang Keluar Gagal Diupdate!", "Gagal", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        pst = conn.prepareStatement("UPDATE stock_out SET produk_id = ?, penerima = ?, jumlah = ?, status = ?, tanggal_keluar = ?, deskripsi = ?, tanggal_dikembalikan = NULL WHERE id = ?");
                        pst.setInt(1, idProduk);
                        pst.setString(2, penerima);
                        pst.setInt(3, jumlah);
                        pst.setString(4, status);
                        pst.setTimestamp(5, tanggalKeluar);
                        pst.setString(6, deskripsi);
                        pst.setInt(7, stockInId);

                        int hasil = pst.executeUpdate();

                        if (hasil == 1) {
                            if (!statusLama.equals("dipinjam") && status.equals("dipinjam")) {
                                PreparedStatement kurangi = conn.prepareStatement("UPDATE products SET stok = stok - ? WHERE id = ?");
                                kurangi.setInt(1, jumlah);
                                kurangi.setInt(2, idProduk);
                                kurangi.executeUpdate();
                            } else if (!statusLama.equals("keluar") && status.equals("keluar")) {
                                PreparedStatement kurangi = conn.prepareStatement("UPDATE products SET stok = stok - ? WHERE id = ?");
                                kurangi.setInt(1, jumlah);
                                kurangi.setInt(2, idProduk);
                                kurangi.executeUpdate();
                            }

                            JOptionPane.showMessageDialog(this, "Barang Keluar Berhasil Diupdate!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                            BarangKeluar halaman = new BarangKeluar(usernameForPage);
                            halaman.setVisible(true);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Barang Keluar Gagal Diupdate!", "Gagal", JOptionPane.WARNING_MESSAGE);
                        }
                    }
                }
            } catch (Exception e) {
                Logger.getLogger(BarangKeluarForm.class.getName()).log(Level.SEVERE, null, e);
            }
    }//GEN-LAST:event_btnActionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarangKeluarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarangKeluarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarangKeluarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarangKeluarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BarangKeluarForm("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAction;
    private javax.swing.JButton btnBackToProducts;
    private javax.swing.JButton btnClear;
    private javax.swing.JComboBox<String> cmbProduk;
    private javax.swing.JComboBox<String> cmbStatus;
    private com.toedter.calendar.JDateChooser dtanggal_keluar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtDeskripsi;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtPenerima;
    // End of variables declaration//GEN-END:variables
}
